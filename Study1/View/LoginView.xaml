<Window x:Class="Study1.View.LoginView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Study1.View"
        mc:Ignorable="d"
        Title="系统登录" Height="600" Width="360"
        FontFamily="微软雅黑" FontWeight="ExtraLight"
        ResizeMode="NoResize" WindowStartupLocation="CenterScreen"
        WindowStyle="None" AllowsTransparency="True" Background="{x:Null}"
        >
    <Window.Resources>
        <ControlTemplate TargetType="Button" x:Key="CloseButtonTemplate">
            <!--定义全局的样式，作用于Button，ID是CloseButtonTemplate-->
            <Border Background="Transparent" Name="back" CornerRadius ="0,20,0,0">
                <Path Data="M0 0 12 12M12 0 0 12" Stroke="Wheat" StrokeThickness="1"  VerticalAlignment="Center" HorizontalAlignment="Center" />
                <!--Data内容M表示移动、落笔，0 0是起始点的坐标，12 12是结尾的坐标，形成一条\直线，
                12 0 0 12 形成/这样的直线 Stroke颜色 1是宽度 最后垂直，水平居中-->
            </Border>
            <ControlTemplate.Triggers>
                <!--控制模板，Triggers一般用来实现Hover、Press等效果。-->
                <Trigger Property="IsMouseOver" Value="True">
                    <!--当鼠标放上去，Property是属性，相当于触发条件-->
                    <Setter TargetName="back" Property="Background" Value="#22FFFFFF"></Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <!--当鼠标被按下-->
                    <Setter TargetName="back" Property="Background" Value="#44FFFFFF"></Setter>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="UserNameTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                                CornerRadius="5">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <ScrollViewer Grid.Column="1" x:Name="PART_ContentHost" Focusable="false" 
                                              HorizontalScrollBarVisibility="Hidden" 
                                              VerticalScrollBarVisibility="Hidden"
                                              VerticalAlignment="Center"/>
                            </Grid>
                            
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Border Margin="5" Background="White"  CornerRadius="20">
        <!--设置窗体的边框，margin，离边框的距离，相当于往里面缩小一点。-->
        <Border.Effect>
            <DropShadowEffect Color="Gray" ShadowDepth="0" BlurRadius="5" Opacity="0.3" Direction="0">
                <!--设置阴影-->
            </DropShadowEffect>
        </Border.Effect>

        <Grid>
            <!--网格-->
            <Grid.RowDefinitions>
                <!--设置行的个数，下级有多少个标签就有多少行-->
                <RowDefinition Height="1.8*"></RowDefinition>
                <!--高度是比例，这里是占（1.8+3）中的1.8份-->
                <RowDefinition Height="3*"></RowDefinition>
                <RowDefinition Height="60"></RowDefinition>
                <!--高度固定60-->
            </Grid.RowDefinitions>
            <Border Background="#FF4489C5"  CornerRadius="20,20,0,0"/>
            <Button VerticalAlignment="Top" HorizontalAlignment="Right" Width="50" Height="30" Template="{StaticResource CloseButtonTemplate}" />
            <!--Button直接使用之前定义的Window.Resources中的模板，可以多次使用 -->

            <StackPanel VerticalAlignment="Bottom" Margin="0 0 0 25">
                <!--设置垂直下方对齐，然后再设置底部的间距为30-->
                <Border Background="White"  VerticalAlignment="Center"  HorizontalAlignment="Center" 
                        CornerRadius="50"
                        >
                    <!--把整个图片再框起来，如果是透明的png可以加底色之类的，这里要设置CornerRadius圆角，图片的上一级还是呀设置CornerRadius-->
                    <Border Width="100" Height="100" CornerRadius="50">
                        <!--这个Boder控制图片大小，用ImageBrush来设置图片-->
                        <Border.Background>
                            <ImageBrush ImageSource="/Assets/LoginImg/Logo.png"  />
                        </Border.Background>
                    </Border>
                </Border>
                <TextBlock Text="52HzElegy平台管理" HorizontalAlignment="Center" Foreground="White"
                       FontSize="18" Margin="0 10 0 0 "/>
            </StackPanel>
            <Grid Grid.Row="1" Margin="20 20">
                <!--账号、密码、登录、验证码、错误提示，需要五行-->
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBox Height="40" Style="{DynamicResource UserNameTextBoxStyle}"/>
                <TextBox Height="40" Grid.Row="1"/>
                <TextBox Height="40" Grid.Row="2"/>
                <Button Content="登录" Grid.Row=" 3"/>
                <!--登录按钮-->
                <TextBlock Text="&#xe6cc;" Foreground="DarkGreen"  Grid.Row="4" FontFamily="../Assets/Fonts/#iconfont"  FontSize="20"/>
            </Grid>

            <Grid Grid.Row="2" Margin="20 0">
                <!--OR和三个第三方登录-->
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <!--高度一点-->
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <!--两个线和OR-->
                        <ColumnDefinition/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Border BorderBrush="Gray" BorderThickness="0,0,0,1"   VerticalAlignment="Center" />
                    <Border BorderBrush="Gray" BorderThickness="0,0,0,1"   VerticalAlignment="Center" Grid.Column="2" />
                    <!--因为有三列， Grid.Column="2"其实是第三个-->
                    <TextBlock Text="OR" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" />
                </Grid>
                <UniformGrid Columns="5" Grid.Row="2">
                    <Border Background="Gray"/>
                    <Border />
                    <Border Background="Gray"/>
                    <Border />
                    <Border Background="Gray"/>
                </UniformGrid>
            </Grid>
        </Grid>
    </Border>

</Window>
